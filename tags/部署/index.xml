<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>部署 on Baykier的鱼塘</title>
    <link>https://baykier.github.io/tags/%E9%83%A8%E7%BD%B2/</link>
    <description>Recent content in 部署 on Baykier的鱼塘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Written by Baykier</copyright>
    <lastBuildDate>Mon, 05 Jun 2017 10:00:36 +0800</lastBuildDate>
    
	<atom:link href="https://baykier.github.io/tags/%E9%83%A8%E7%BD%B2/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>homepage 的自动部署</title>
      <link>https://baykier.github.io/post/auto_deploy/</link>
      <pubDate>Mon, 05 Jun 2017 10:00:36 +0800</pubDate>
      
      <guid>https://baykier.github.io/post/auto_deploy/</guid>
      <description>homepage自动部署 背景 首先交代一下背景，俺的博客是基于hugo的生成静态站点，代码放在github上面 对于hugo 和github不是很了解的同学可以去了解一下。
下面是我写博客的大概流程:
1.在自己的个人电脑上写博客，用hugo生成静态站点测试无误后推送到github
# 新增博客 hugo new post/&amp;lt;some_title&amp;gt;.md # 用编辑器编辑并测试 hugo server -w # 生成静态站点 hugo #推送到github git push origin master  2.在服务器上面拉取更新站点
cd /path/to/site git pull origin master  经过上面的分析可以看出，对于服务器端的每次拉取可以写成一个脚本，利用github的hook机制，这样每次写完博客 测试ok直接推送就行了，省去每次登录服务器，再git pull的操作，这样岂不美哉！
自动部署脚本原理 其实对于这个机智(偷懒)的想法早就有了，直到昨天下午有时间，才完善了一下。网上有很多类似的代码，实现原理 大同小异,都是根据github的hook机制,需要注意的就是安全方面，具体流程如下面:
1.博客更新推送到github
2.github推送webhook到url
3.url里面验证推送的来源(确保安全),执行代码拉取完成更新
编写php脚本(因为php是最好的语言么) 代码可以在这里找到homepage自动部署脚本
&amp;lt;?php /** * homepage 自动更新脚本 */ /** * CSV 软件 Git */ define(&#39;CSV_SOFT&#39;,&#39;git&#39;); /** * HASH for github.com */ define(&#39;HASH&#39;,&#39;59341c1092c47&#39;); define(&#39;ROOT_PATH&#39;,dirname(dirname(__DIR__))); define(&#39;LOG_FILE&#39;,ROOT_PATH .&#39;/git-auto-pull.log&#39;); /** * 获取上次命令的状态 * echo $?</description>
    </item>
    
  </channel>
</rss>