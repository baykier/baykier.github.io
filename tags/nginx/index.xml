<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nginx on Baykier的鱼塘</title>
    <link>https://baykier.github.io/tags/nginx/index.xml</link>
    <description>Recent content in Nginx on Baykier的鱼塘</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>Written by Baykier</copyright>
    <atom:link href="https://baykier.github.io/tags/nginx/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>nginx ssl 证书配置</title>
      <link>https://baykier.github.io/post/nginx_ssl/</link>
      <pubDate>Tue, 29 Aug 2017 05:23:25 +0000</pubDate>
      
      <guid>https://baykier.github.io/post/nginx_ssl/</guid>
      <description>

&lt;h2 id=&#34;nginx-ssl证书配置&#34;&gt;nginx ssl证书配置&lt;/h2&gt;

&lt;p&gt;一般在开发环境中，ssl时没有必要设置的，但是因为测试需要用到https环境，所以就记录下来，当学习了。&lt;/p&gt;

&lt;h3 id=&#34;生成ssl证书&#34;&gt;生成ssl证书&lt;/h3&gt;

&lt;p&gt;https 需要证书，所需要的证书一般可以自己生成，这时候需要手动添加到浏览器，还有就是去证书网站申请,推荐使用
&lt;a href=&#34;https://letsencrypt.org/&#34;&gt;Let&amp;rsquo;s Encrypt&lt;/a&gt; (注:这种证书只能使用3个月的时间，过期需要再次申请)
我们这里仅需要自己手动生成证书就可以了&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;生成密钥key,执行下面的命令，输入两次密码就可以了&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;openssl genrsa -des3 -out dev.key 1024
&lt;/code&gt;&lt;/pre&gt;

&lt;ol&gt;
&lt;li&gt;利用密钥key生成证书crt文件,执行下面的命令，输入证书的参数就可以了&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;openssl req -new -x509 -key dev.key -out dev.crt -days 3650
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;证书的参数:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Country Name 国家名字 (CN 即可)&lt;/li&gt;
&lt;li&gt;State or Province Name 省或地区(BeiJing)&lt;/li&gt;
&lt;li&gt;Locality Name 当地地区 (BeiJing)&lt;/li&gt;
&lt;li&gt;Organization Name 机构名称 (develop Ltd)&lt;/li&gt;
&lt;li&gt;Organizational Unit Name 组织机构单位 (develop)&lt;/li&gt;
&lt;li&gt;Common Name 站点host (dev.com)&lt;/li&gt;
&lt;li&gt;Email Address 邮箱&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
&lt;li&gt;生成不需要密码的密钥,给nginx配置&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;openssl rsa -in dev.key -out dev.nopass.key
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;配置nginx&#34;&gt;配置nginx&lt;/h3&gt;

&lt;p&gt;nginx 配置很简单，导入证书路径即可,下面是一个实例配置&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;server {
    listen 443;
    server_name dev.cn;

    ssl on;
    ssl_certificate /var/project/conf/nginx/dev.crt;
    ssl_certificate_key /var/project/conf/nginx/dev.nopass.key;

    root /var/project/htdocs/dev/public;

  	# Add index.php to the list if you are using PHP
  	index index.php index.html index.htm index.nginx-debian.html;

  	server_name dev.borrow.cn;

  	location / {
  		# First attempt to serve request as file, then
  		# as directory, then fall back to displaying a 404.
  		try_files $uri /index.php$is_args?$args ;
  	}

  	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
  	#
  	location ~ \.php {
  		include snippets/fastcgi-php.conf;

  	#	# With php7.0-cgi alone:
  	#	fastcgi_pass 127.0.0.1:9000;
  		# With php7.0-fpm:
  		fastcgi_pass unix:/run/php/php7.0-fpm.sock;
  	}

  	# deny access to .htaccess files, if Apache&#39;s document root
  	# concurs with nginx&#39;s one
  	#
  	#location ~ /\.ht {
  	#	deny all;
  	#}
  	access_log /var/project/log/nginx/dev.cn-access.log;
  	error_log /var/project/log/nginx/dev.cn-error.log;
 }
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;相关阅读&#34;&gt;相关阅读&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/littlehann/p/3738141.html&#34;&gt;证书介绍&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.cnblogs.com/yjmyzz/p/openssl-tutorial.html&#34;&gt;openssl、x509、crt、cer、key、csr、ssl、tls 这些都是什么鬼?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>